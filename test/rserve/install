#!/bin/bash

YELLOW='\033[1;33m'
RESET='\033[0m'
echo -e "${YELLOW}"
echo -e " !!! PLEASE NOTE !!!"
echo -e ""
echo -e " Authentication is DISABLED in the RServe configuration file (rserve.conf)."
echo -e " Please ensure you configure authentication correctly for a production system."
echo -e "${RESET}"

shopt -s extglob
set -e

branch=${1:-cedar-14-chroot}
destroy=${2:-0}

# create a temporary directory and copy
# the test application to it
dir=$(mktemp -d)
cp -r . $dir
pushd $dir

# assuming Ruby and Python are already installed,
# install dependancies
echo Installing dependancies...
bundle install
pip install -r requirements.txt

# commit to git for push to heroku
git init
echo *.log > .gitignore
git add --all
git commit -m "initial"

# create the app with R buildpack
heroku create --stack cedar-14 \
              --buildpack https://github.com/virtualstaticvoid/heroku-buildpack-r.git#$branch

# trick to get the app name
app=$(heroku apps:info -j | jq -r '.app.name')

git push heroku master

# start rserve process
heroku ps:scale rserve=1

popd

# destroy the app, and clean up temporary files
if [[ "$destroy" -eq "1" ]]; then

  # clean up
  heroku apps:destroy $app --confirm $app
  rm -rf $dir

else

  GREEN='\033[1;32m'
  RESET='\033[0m'
  echo -e "${GREEN} ********************************************************************************"
  echo -e ""
  echo -e " Run the following commands to try out the Ruby or Python clients"
  echo -e ""
  echo -e "  bundle exec ruby ./client.rb $app.herokuapp.com"
  echo -e ""
  echo -e "  python ./client.py $app.herokuapp.com"
  echo -e ""
  echo -e " Run the following command to destroy the test application when you are done."
  echo -e ""
  echo -e "  heroku apps:destroy $app"
  echo -e ""
  echo -e "********************************************************************************"
  echo -e "${RESET}"

  # tail the log, Ctrl+C to stop
  echo "Press CTRL+C to STOP tailing the log"
  heroku logs --tail --app $app

fi
